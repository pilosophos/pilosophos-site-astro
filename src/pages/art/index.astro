---
import { Image } from "astro:assets";
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import { getCollection, getEntry, render } from 'astro:content';

const art = await getCollection('art');
---

<DefaultLayout title="Art">
  <main class="container">
    <ul class="grid grid-cols-3 gap-5">
      {
        art.map(async (piece, i) =>
          <li>
            <Image
              src={ piece.data.cover }
              alt={ piece.data.title }
              quality="max"
              width={400}
              class="art-thumbnail"
              data-index={ i }
              data-art-id={ piece.id }
            />
          </li>
        )
      }
    </ul>
  </main>
</DefaultLayout>

{
  // generate templates for image descriptions
  art.map(async (piece, i) => {
    const { Content } = await render(piece);

    return (
      <template id={ 'desc-' + piece.id }>
        <div>
          <h1 class="font-display text-4xl">{ piece.data.title }</h1>
          <Content />
        </div>
      </template>
    )
  })
}

{
  // generate templates for full-res images themselves
  art.map(async (piece, i) =>
    <template id={ 'image-' + piece.id }>
      <Image
        class="max-h-screen object-contain w-auto h-auto"
        src={ piece.data.cover }
        alt={ piece.data.title }
        quality="max"
        width={piece.data.cover.width}
      />
    </template>
  )
}

<div 
  id="viewer"
  class="hidden fixed left-0 top-0 w-screen h-screen bg-black/75"
>
  <article id="viewer__article" class="flex flex-row items-center justify-between w-full h-full">
    <div id="viewer__image" class="flex justify-center w-full"></div>
    <div id="viewer__sidebar" class="bg-zinc-900 h-screen w-150 p-10">
      <nav class="mb-3 pb-2 border-b border-stone-500">
        <button id="viewer__close" class="muted hover:text-pi-cyan text-lg font-display">
          &leftarrow; Back to gallery
        </button>
      </nav>
      <div id="viewer__desc" class="overflow-y-scroll"></div>
    </div>
  </article>
</div>

<script type="text/javascript">
  (function() {
    'use strict';

    const viewer = document.getElementById('viewer');
    const article = document.getElementById('viewer__article');
    const imgContainer = document.getElementById('viewer__image');
    const descContainer = document.getElementById('viewer__desc');

    function init() {
      // turn thumbnails into image viewer activators
      document.querySelectorAll('.art-thumbnail').forEach(
        e => e.addEventListener('click', () => showViewer(e.dataset.artId))
      );

      // show viewer if there's an art ID specified in the URL
      const artId = new URLSearchParams(window.location.search).get('image');
      if (artId) showViewer(artId);

      document.getElementById('viewer__close').addEventListener('click', hideViewer);
      imgContainer.addEventListener('click', e => { if (e.target === imgContainer) hideViewer() });
      article.addEventListener('click', e => { if (e.target === article) hideViewer() });
    }

    function showViewer(artId) {
      viewer.classList.remove('hidden');

      const image = document.getElementById('image-' + artId).content.cloneNode(true);
      imgContainer.innerHTML = '';
      imgContainer.append(image);

      const desc = document.getElementById('desc-' + artId).content.cloneNode(true);
      descContainer.innerHTML = '';
      descContainer.append(desc);
    }

    function hideViewer() {
      viewer.classList.add('hidden');
    }

    init();
  })();
</script>